name: Coverage Badge

on:
  push:
    branches: [ main, Development ]
  pull_request:
    branches: [ main, Development ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests with coverage
      run: npm run test:ci-safe

    - name: Extract coverage percentage
      id: coverage
      run: |
        # Check if coverage file exists
        if [ ! -f "coverage/coverage-summary.json" ]; then
          echo "Coverage file not found!"
          exit 1
        fi
        
        # Extract coverage percentage from coverage summary with better error handling
        COVERAGE=$(jq -r '.total.lines.pct' coverage/coverage-summary.json 2>/dev/null || echo "0")
        
        # Fallback to grep method if jq fails
        if [ "$COVERAGE" = "0" ] || [ "$COVERAGE" = "null" ]; then
          COVERAGE=$(grep -o '"lines":{"total":[0-9]*,"covered":[0-9]*,"skipped":[0-9]*,"pct":[0-9.]*' coverage/coverage-summary.json | grep -o '"pct":[0-9.]*' | cut -d':' -f2 || echo "0")
        fi
        
        echo "percentage=$COVERAGE" >> $GITHUB_OUTPUT
        
        # Determine badge color based on coverage percentage using awk (more portable)
        COLOR=$(awk -v cov="$COVERAGE" 'BEGIN {
          if (cov >= 90) print "brightgreen"
          else if (cov >= 80) print "green" 
          else if (cov >= 70) print "yellow"
          else if (cov >= 60) print "orange"
          else print "red"
        }')
        
        echo "color=$COLOR" >> $GITHUB_OUTPUT
        echo "Coverage: $COVERAGE%"
        echo "Badge color: $COLOR"

    - name: Generate coverage badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_TOKEN }}
        gistID: ${{ secrets.GIST_ID }}
        filename: coverage-badge.json
        label: Coverage
        message: ${{ steps.coverage.outputs.percentage }}%
        color: ${{ steps.coverage.outputs.color }}
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/Development'
      continue-on-error: true

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ github.sha }}
        path: coverage/
        retention-days: 7